==8061== Memcheck, a memory error detector
==8061== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==8061== Using Valgrind-3.16.1 and LibVEX; rerun with -h for copyright info
==8061== Command: ./rlg327
==8061== Parent PID: 6609
==8061== 
==8061== Conditional jump or move depends on uninitialised value(s)
==8061==    at 0x11A1FE: gen_monsters(dungeon*) (npc.cpp:100)
==8061==    by 0x10D65E: main (rlg327.cpp:215)
==8061== 
==8061== Conditional jump or move depends on uninitialised value(s)
==8061==    at 0x11F948: io_display(dungeon*) (io.cpp:232)
==8061==    by 0x10D66D: main (rlg327.cpp:217)
==8061== 
==8061== Use of uninitialised value of size 8
==8061==    at 0x118445: can_see(dungeon*, short*, short*, int, int) (character.cpp:99)
==8061==    by 0x11F9A2: io_display(dungeon*) (io.cpp:233)
==8061==    by 0x10D66D: main (rlg327.cpp:217)
==8061== 
==8061== Invalid read of size 2
==8061==    at 0x118445: can_see(dungeon*, short*, short*, int, int) (character.cpp:99)
==8061==    by 0x11F9A2: io_display(dungeon*) (io.cpp:233)
==8061==    by 0x10D66D: main (rlg327.cpp:217)
==8061==  Address 0x7c is not stack'd, malloc'd or (recently) free'd
==8061== 
==8061== 
==8061== Process terminating with default action of signal 11 (SIGSEGV)
==8061==  Access not within mapped region at address 0x7C
==8061==    at 0x118445: can_see(dungeon*, short*, short*, int, int) (character.cpp:99)
==8061==    by 0x11F9A2: io_display(dungeon*) (io.cpp:233)
==8061==    by 0x10D66D: main (rlg327.cpp:217)
==8061==  If you believe this happened as a result of a stack
==8061==  overflow in your program's main thread (unlikely but
==8061==  possible), you can try to increase the size of the
==8061==  main thread stack using the --main-stacksize= flag.
==8061==  The main thread stack size used in this run was 8388608.
==8061== 
==8061== HEAP SUMMARY:
==8061==     in use at exit: 180,522 bytes in 609 blocks
==8061==   total heap usage: 16,319 allocs, 15,710 frees, 951,643 bytes allocated
==8061== 
==8061== LEAK SUMMARY:
==8061==    definitely lost: 128 bytes in 1 blocks
==8061==    indirectly lost: 363 bytes in 2 blocks
==8061==      possibly lost: 0 bytes in 0 blocks
==8061==    still reachable: 180,031 bytes in 606 blocks
==8061==         suppressed: 0 bytes in 0 blocks
==8061== Rerun with --leak-check=full to see details of leaked memory
==8061== 
==8061== Use --track-origins=yes to see where uninitialised values come from
==8061== For lists of detected and suppressed errors, rerun with: -s
==8061== ERROR SUMMARY: 795 errors from 4 contexts (suppressed: 0 from 0)
